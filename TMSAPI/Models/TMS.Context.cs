//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TMSAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TMS_DbEntities : DbContext
    {
        public TMS_DbEntities()
            : base("name=TMS_DbEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TaskPriority> TaskPriorities { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<usp_GetTasks_Result> usp_GetTasks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTasks_Result>("usp_GetTasks");
        }
    
        public virtual int usp_InsertTasks(string taskName, Nullable<System.DateTime> assignedDate, Nullable<System.DateTime> dueDate, Nullable<int> statusID, Nullable<int> priorityID, Nullable<int> assigneeID, Nullable<int> assignerID)
        {
            var taskNameParameter = taskName != null ?
                new ObjectParameter("TaskName", taskName) :
                new ObjectParameter("TaskName", typeof(string));
    
            var assignedDateParameter = assignedDate.HasValue ?
                new ObjectParameter("AssignedDate", assignedDate) :
                new ObjectParameter("AssignedDate", typeof(System.DateTime));
    
            var dueDateParameter = dueDate.HasValue ?
                new ObjectParameter("DueDate", dueDate) :
                new ObjectParameter("DueDate", typeof(System.DateTime));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var priorityIDParameter = priorityID.HasValue ?
                new ObjectParameter("PriorityID", priorityID) :
                new ObjectParameter("PriorityID", typeof(int));
    
            var assigneeIDParameter = assigneeID.HasValue ?
                new ObjectParameter("AssigneeID", assigneeID) :
                new ObjectParameter("AssigneeID", typeof(int));
    
            var assignerIDParameter = assignerID.HasValue ?
                new ObjectParameter("AssignerID", assignerID) :
                new ObjectParameter("AssignerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertTasks", taskNameParameter, assignedDateParameter, dueDateParameter, statusIDParameter, priorityIDParameter, assigneeIDParameter, assignerIDParameter);
        }
    
        public virtual int usp_UpdateTasks(Nullable<int> taskID, string taskName, Nullable<System.DateTime> assignedDate, Nullable<System.DateTime> dueDate, Nullable<int> statusID, Nullable<int> priorityID, Nullable<int> assigneeID, Nullable<int> assignerID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var taskNameParameter = taskName != null ?
                new ObjectParameter("TaskName", taskName) :
                new ObjectParameter("TaskName", typeof(string));
    
            var assignedDateParameter = assignedDate.HasValue ?
                new ObjectParameter("AssignedDate", assignedDate) :
                new ObjectParameter("AssignedDate", typeof(System.DateTime));
    
            var dueDateParameter = dueDate.HasValue ?
                new ObjectParameter("DueDate", dueDate) :
                new ObjectParameter("DueDate", typeof(System.DateTime));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var priorityIDParameter = priorityID.HasValue ?
                new ObjectParameter("PriorityID", priorityID) :
                new ObjectParameter("PriorityID", typeof(int));
    
            var assigneeIDParameter = assigneeID.HasValue ?
                new ObjectParameter("AssigneeID", assigneeID) :
                new ObjectParameter("AssigneeID", typeof(int));
    
            var assignerIDParameter = assignerID.HasValue ?
                new ObjectParameter("AssignerID", assignerID) :
                new ObjectParameter("AssignerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateTasks", taskIDParameter, taskNameParameter, assignedDateParameter, dueDateParameter, statusIDParameter, priorityIDParameter, assigneeIDParameter, assignerIDParameter);
        }
    }
}
